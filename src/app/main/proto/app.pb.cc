// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: app/main/proto/app.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "app/main/proto/app.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace PS {

namespace {

const ::google::protobuf::Descriptor* AppConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AppConfig_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_app_2fmain_2fproto_2fapp_2eproto() {
  protobuf_AddDesc_app_2fmain_2fproto_2fapp_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "app/main/proto/app.proto");
  GOOGLE_CHECK(file != NULL);
  AppConfig_descriptor_ = file->message_type(0);
  static const int AppConfig_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppConfig, linear_method_),
  };
  AppConfig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AppConfig_descriptor_,
      AppConfig::default_instance_,
      AppConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppConfig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppConfig, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AppConfig));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_app_2fmain_2fproto_2fapp_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AppConfig_descriptor_, &AppConfig::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_app_2fmain_2fproto_2fapp_2eproto() {
  delete AppConfig::default_instance_;
  delete AppConfig_reflection_;
}

void protobuf_AddDesc_app_2fmain_2fproto_2fapp_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::PS::LM::protobuf_AddDesc_app_2flinear_5fmethod_2fproto_2flinear_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\030app/main/proto/app.proto\022\002PS\032$app/line"
    "ar_method/proto/linear.proto\"1\n\tAppConfi"
    "g\022$\n\rlinear_method\030\003 \001(\0132\r.PS.LM.Config", 119);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "app/main/proto/app.proto", &protobuf_RegisterTypes);
  AppConfig::default_instance_ = new AppConfig();
  AppConfig::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_app_2fmain_2fproto_2fapp_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_app_2fmain_2fproto_2fapp_2eproto {
  StaticDescriptorInitializer_app_2fmain_2fproto_2fapp_2eproto() {
    protobuf_AddDesc_app_2fmain_2fproto_2fapp_2eproto();
  }
} static_descriptor_initializer_app_2fmain_2fproto_2fapp_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int AppConfig::kLinearMethodFieldNumber;
#endif  // !_MSC_VER

AppConfig::AppConfig()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AppConfig::InitAsDefaultInstance() {
  linear_method_ = const_cast< ::PS::LM::Config*>(&::PS::LM::Config::default_instance());
}

AppConfig::AppConfig(const AppConfig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AppConfig::SharedCtor() {
  _cached_size_ = 0;
  linear_method_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AppConfig::~AppConfig() {
  SharedDtor();
}

void AppConfig::SharedDtor() {
  if (this != default_instance_) {
    delete linear_method_;
  }
}

void AppConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AppConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AppConfig_descriptor_;
}

const AppConfig& AppConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_app_2fmain_2fproto_2fapp_2eproto();
  return *default_instance_;
}

AppConfig* AppConfig::default_instance_ = NULL;

AppConfig* AppConfig::New() const {
  return new AppConfig;
}

void AppConfig::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_linear_method()) {
      if (linear_method_ != NULL) linear_method_->::PS::LM::Config::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AppConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .PS.LM.Config linear_method = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_linear_method()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void AppConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .PS.LM.Config linear_method = 3;
  if (has_linear_method()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->linear_method(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AppConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .PS.LM.Config linear_method = 3;
  if (has_linear_method()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->linear_method(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AppConfig::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .PS.LM.Config linear_method = 3;
    if (has_linear_method()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->linear_method());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AppConfig::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AppConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AppConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AppConfig::MergeFrom(const AppConfig& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_linear_method()) {
      mutable_linear_method()->::PS::LM::Config::MergeFrom(from.linear_method());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AppConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppConfig::CopyFrom(const AppConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppConfig::IsInitialized() const {

  if (has_linear_method()) {
    if (!this->linear_method().IsInitialized()) return false;
  }
  return true;
}

void AppConfig::Swap(AppConfig* other) {
  if (other != this) {
    std::swap(linear_method_, other->linear_method_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AppConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AppConfig_descriptor_;
  metadata.reflection = AppConfig_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace PS

// @@protoc_insertion_point(global_scope)
